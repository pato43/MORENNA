import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from sklearn.ensemble import IsolationForest
from sklearn.linear_model import LinearRegression

# Configuraci칩n inicial
st.set_page_config(page_title="An치lisis de Recursos para Partidos Pol칤ticos", layout="wide")

# T칤tulo principal
st.title("An치lisis Integral de Recursos para Partidos Pol칤ticos")
st.markdown("""
**Esta es una herramienta de demostraci칩n** para el an치lisis, monitoreo y gesti칩n de recursos econ칩micos, operativos, inventarios y categor칤as de gastos. 
El sistema permite evaluar patrones de uso, detectar anomal칤as y realizar proyecciones para una mejor toma de decisiones.
""")

# Carga de datos simulados
@st.cache
def load_data():
    np.random.seed(42)
    categories = [
        "Actividades Ordinarias", 
        "Gastos de Proceso Electoral", 
        "Actividades Espec칤ficas"
    ]
    data = {
        "Categor칤a": np.random.choice(categories, 300),
        "Mes": np.random.choice(range(1, 13), 300),
        "Gasto ($)": np.random.randint(10000, 50000, 300),
        "A침o": np.random.choice([2022, 2023, 2024], 300),
    }
    return pd.DataFrame(data)

data = load_data()

# Pesta침as principales
tab1, tab2, tab3, tab4, tab5 = st.tabs([
    "游댍 An치lisis General", 
    "游늵 Anomal칤as", 
    "游늳 Proyecciones", 
    "游닍 Inventarios", 
    "游닆 Categor칤as de Gastos"
])

# --- Pesta침a 1: An치lisis General ---
with tab1:
    st.header("An치lisis General de Recursos")
    st.markdown("Visualizaci칩n de gastos por 치reas e instancias.")
    
    col1, col2 = st.columns(2)
    with col1:
        category_gastos = data.groupby("Categor칤a")["Gasto ($)"].sum().reset_index()
        fig = px.bar(category_gastos, x="Categor칤a", y="Gasto ($)", title="Gasto Total por Categor칤a")
        st.plotly_chart(fig)
    
    with col2:
        gasto_mes = data.groupby("Mes")["Gasto ($)"].sum().reset_index()
        fig = px.line(gasto_mes, x="Mes", y="Gasto ($)", title="Tendencia Mensual de Gastos")
        st.plotly_chart(fig)

# --- Pesta침a 2: Anomal칤as ---
with tab2:
    st.header("Detecci칩n de Anomal칤as en los Gastos")
    st.markdown("Identificaci칩n de gastos at칤picos utilizando machine learning.")
    
    iforest = IsolationForest(contamination=0.1, random_state=42)
    data["Anomal칤a"] = iforest.fit_predict(data[["Gasto ($)"]])
    
    anomal칤as = data[data["Anomal칤a"] == -1]
    fig = px.scatter(data, x="Mes", y="Gasto ($)", color="Anomal칤a", title="Anomal칤as en los Gastos")
    st.plotly_chart(fig)
    st.dataframe(anomal칤as, use_container_width=True)

# --- Pesta침a 3: Proyecciones ---
with tab3:
    st.header("Proyecciones de Gastos Futuros")
    st.markdown("Proyecci칩n del uso de recursos en categor칤as clave.")
    
    proyeccion = data.groupby(["A침o", "Categor칤a"])["Gasto ($)"].sum().reset_index()
    modelo = LinearRegression()
    for categoria in proyeccion["Categor칤a"].unique():
        df_cat = proyeccion[proyeccion["Categor칤a"] == categoria]
        X = df_cat["A침o"].values.reshape(-1, 1)
        y = df_cat["Gasto ($)"]
        modelo.fit(X, y)
        proyeccion.loc[proyeccion["Categor칤a"] == categoria, "Proyecci칩n ($)"] = modelo.predict(X)
    
    fig = px.line(proyeccion, x="A침o", y="Proyecci칩n ($)", color="Categor칤a", title="Proyecci칩n de Gastos por Categor칤a")
    st.plotly_chart(fig)

# --- Pesta침a 4: Inventarios ---
with tab4:
    st.header("Gesti칩n Eficiente de Inventarios")
    st.markdown("Visualizaci칩n de inventarios de medicinas, alimentos y gastos operativos.")
    
    inventarios = {
        "Categor칤a": ["Medicinas", "Alimentos", "Gastos Operativos"],
        "Disponible": [80, 120, 150],
        "Proyectado (Mes Siguiente)": [60, 100, 140]
    }
    df_inv = pd.DataFrame(inventarios)
    fig = px.bar(df_inv, x="Categor칤a", y=["Disponible", "Proyectado (Mes Siguiente)"], barmode="group", title="Inventarios Actuales y Proyectados")
    st.plotly_chart(fig)
    st.dataframe(df_inv, use_container_width=True)

# --- Pesta침a 5: Categor칤as de Gastos ---
with tab5:
    st.header("An치lisis Detallado por Categor칤as de Gastos")
    st.markdown("""
    - **Actividades Ordinarias:** Incluyen salarios, rentas, gastos de estructura partidista y propaganda institucional.
    - **Gastos de Proceso Electoral:** Propaganda electoral, publicidad, eventos p칰blicos, y producci칩n de mensajes.
    - **Actividades Espec칤ficas:** Promoci칩n de participaci칩n pol칤tica, valores c칤vicos y derechos humanos, con 칠nfasis en liderazgo femenino.
    """)
    
    fig = px.sunburst(
        data, 
        path=["Categor칤a", "Mes"], 
        values="Gasto ($)", 
        title="Distribuci칩n de Gastos por Categor칤a y Mes"
    )
    st.plotly_chart(fig)
